{"version":3,"sources":["Components/ContactList.module.css","Components/Filter.module.css","Components/Container.module.css","Components/ContactForm.module.css","Components/ContactForm.js","Components/ContactList.js","Components/Filter.js","Components/Copntainer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","inputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","className","s","form","this","label","input","type","pattern","title","required","onChange","button","React","Component","ContactList","listName","onDeleteContact","map","id","contactItem","onClick","Filter","handleChange","Container","children","App","contacts","filter","deleteContact","contactId","prevState","contact","nameInputId","shortid","generate","changeContacts","console","log","verifyContact","alert","find","toLowerCase","getNecessaryName","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","conacts","setItem","stringify","getName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcd1900b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__25UGs\",\"button\":\"ContactList_button__1qJ4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2MHbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1R60W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1fx-V\",\"input\":\"ContactForm_input__Pnchx\",\"form\":\"ContactForm_form__Auxrd\",\"button\":\"ContactForm_button__3MQvs\"};","import React from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  inputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.inputChange}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.inputChange}\r\n            />\r\n          </label>\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nexport default function ContactList({ listName, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {listName.map(({ name, id, number }) => (\r\n          <li className={s.contactItem} key={id}>\r\n            {name}:{number}\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Удалить\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nexport default function Filter({ value, handleChange }) {\r\n  return (\r\n    <>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        className={s.input}\r\n        name=\"filter\"\r\n        value={value}\r\n        type=\"input\"\r\n        onChange={handleChange}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ContactForm from \"./Components/ContactForm\";\nimport ContactList from \"./Components/ContactList\";\nimport Filter from \"./Components/Filter\";\nimport shortid from \"shortid\";\nimport Container from \"./Components/Copntainer\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.conacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  inputChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  nameInputId = shortid.generate();\n\n  changeContacts = (name, number) => {\n    console.log(name, number);\n    if (this.verifyContact(name)) {\n      alert(\"уже есть такой контакт\");\n      return;\n    }\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n  verifyContact = (name) => {\n    const { contacts } = this.state;\n    return contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n  getNecessaryName = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const getName = this.getNecessaryName();\n\n    return (\n      <>\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.changeContacts} />\n          <h2>Contacts</h2>\n          <Filter value={filter} handleChange={this.inputChange} />\n          <ContactList\n            listName={getName}\n            onDeleteContact={this.deleteContact}\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}